% mdpn.sty
%
% Copyright 2016 by Billy Okal, Philip Thomas
%
% See the files LICENSE details.


\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesClass{mdpn}[2016/05/31 v1.0]

\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage{amsfonts}
\RequirePackage{amstext}
\RequirePackage{bm}
\RequirePackage{mathrsfs}
\RequirePackage{mathtools}  % for \coloneq

% options for selecting notation mode
\let\if@alpha\iffalse
\DeclareOption{alpha}{\let\if@alpha\iftrue}

\let\if@beta\iftrue
\DeclareOption{beta}{\let\if@beta\iffalse}

\ProcessOptions

\if@alpha
    \newcommand{MDP}{x,y, z}

\if@beta
    \newcommand{MDP}{a, b, c}


% ********************************************************************
% Variables (discrete and continuous), sets, operators
% ********************************************************************
\newcommand{\N}{\mathbb{N}}         % set of natural numbers
\newcommand{\NZ}{\N_{\geq 0}}       % set of natural numbers, > 0


% ********************************************************************
% MDP Notation
% ********************************************************************
\newcommand{\step}{\ensuremath{t \in \NZ}}       % time step

% state and action sets
\newcommand{\sset}{\ensuremath{\mathcal{S}}}    % state space
\newcommand{\st}[1]{\ensuremath{S_{#1}}}     % single state at time t
\newcommand{\aset}{\ensuremath{\mathcal{A}}}   % action space
\newcommand{\at}[1]{\ensuremath{A_{#1}}}    % single state at time t

% reward related
\newcommand{\rset}{\ensuremath{\mathcal{R}}}
\newcommand{\rsetdef}{\ensuremath{\rset \subsetq \mathbb{R} \cup \{-\infty, \infty\}}}  % set of possible rewards
\newcommand{\rmax}{\r_{\text{max}}}
\newcommand{\rmin}{\r_{\text{min}}}
\newcommand{\R}{\ensuremath{R}}
\newcommand{\RewardR}[4]{\R(#4 \vert #1,#2,#3)} %order: s,a,s',r
\newcommand{\RewardSAS}[4]{\R_{#1,#3}^{#2}(#4)}
\newcommand{\RewardSASR}[4]{\R_{#1,#3}^{#2,#4}}

% transition related
\newcommand{\Tdef}{\ensuremath{P:\sset \times \aset \times \sset \longmapsto [0,1]}}
\newcommand{\T}{\ensuremath{P}}
\newcommand{\TransitionA}[3]{\T(#3 \vert #1,#2)} % s,a,s'
\newcommand{\TransitionB}[3]{\T_{#1}^{#2}(#3)}
\newcommand{\TransitionC}[3]{\T_{#1,#3}^{#2}}

% initial state distribution
\newcommand{\isset}{\ensuremath{d_0}}
\newcommand{\issetdef}{\ensuremath{\isset : \sset \longmapsto [0,1]}}

% discount factor
\newcommand{\D}{\ensuremath{\gamma}}
\newcommand{\Ddef}{\ensuremath{\D \in [0, 1)}}

% policies
\newcommand{\pol}{\ensuremath{\pi}}
\newcommand{\poldef}{\ensuremath{\pol : \sset \times \aset \longmapsto [0, 1] }}

% pol shortcuts
\newcommand{\polA}[2]{\ensuremath{\pol(#2 \vert #1)}} % order: s, a
\newcommand{\polB}[2]{\ensuremath{\pol_{#1}(#2) }}
\newcommand{\polC}[2]{\ensuremath{\pol_{#1}^{#2} }}
\newcommand{\polD}[2]{\ensuremath{\pol(#1, #2) }}

% parameterized pol shortcuts
\newcommand{\pparams}{\ensuremath{\V{\theta}}}
\newcommand{\ppolA}[2]{\ensuremath{\pol(#2 \vert #1, \pparams)}} % order:s, a
\newcommand{\ppolB}[2]{\ensuremath{\pol_{\pparams}^{#1}(#2) }}
\newcommand{\ppolC}[2]{\ensuremath{\pol_{\pparams}^{#1,#2} }}
\newcommand{\ppolD}[2]{\ensuremath{\pol(#1, #2, \pparams) }}

% Finally an MDP
\newcommand{\MDP}{(\sset, \aset, \T, \rset, \R, \isset, \D)}
