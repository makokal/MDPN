% mdpn.sty
%
% Copyright 2016 by Billy Okal, Philip Thomas
%
% See the files LICENSE details.

\NeedsTeXFormat{LaTeX2e}[1995/12/01]
\ProvidesClass{mdpn}[2016/05/31 MDP Notation v1.0]

\RequirePackage{amsmath}
\RequirePackage{amssymb}
\RequirePackage{bm}
\RequirePackage{mathrsfs}
\RequirePackage{mathtools}  % for \coloneq


% ********************************************************************
% Variables (discrete and continuous), sets, operators
% ********************************************************************
\newcommand{\N}{\mathbb{N}}         % set of natural numbers
\newcommand{\NZ}{\N_{\geq 0}}       % set of natural numbers, > 0


% ********************************************************************
% MDP Notation
% ********************************************************************
\newcommand{\step}{\ensuremath{t \in \NZ}}       % time step

% state and action sets
\newcommand{\sset}{\ensuremath{\mathcal{S}}}    % state space
\newcommand{\st}[1]{\ensuremath{S_{#1}}}     % single state at time t
\newcommand{\aset}{\ensuremath{\mathcal{A}}}   % action space
\newcommand{\at}[1]{\ensuremath{A_{#1}}}    % single state at time t

% reward related
\newcommand{\rset}{\ensuremath{\mathcal{R}}}
\newcommand{\rsetdef}{\ensuremath{\rset \subseteq \mathbb{R} \cup \{-\infty, \infty\}}}  % set of possible rewards
\newcommand{\rmax}{r_{\text{max}}}
\newcommand{\rmin}{r_{\text{min}}}
\newcommand{\Rfun}{\ensuremath{R}}

% T related
\newcommand{\Tdef}{\ensuremath{P:\sset \times \aset \times \sset \longmapsto [0,1]}}
\newcommand{\Tfun}{\ensuremath{P}}

% initial state distribution
\newcommand{\isset}{\ensuremath{d_0}}
\newcommand{\issetdef}{\ensuremath{\isset : \sset \longmapsto [0,1]}}

% discount factor
\newcommand{\D}{\ensuremath{\gamma}}
\newcommand{\Ddef}{\ensuremath{\D \in [0, 1)}}

% policies
\newcommand{\p}{\ensuremath{\pi}}
\newcommand{\pdef}{\ensuremath{\p : \sset \times \aset \longmapsto [0, 1]}}
\newcommand{\pparams}{\ensuremath{\V{\theta}}} % policy parameters

% Finally the MDP
\newcommand{\MDP}{(\sset, \aset, \Tfun, \rset, \Rfun, \isset, \D)}


% notation depending on passed options
\DeclareOption{alpha}{
    \newcommand{\R}[4]{\Rfun(#4 \mid #1,#2,#3)} %order: s,a,s',r
    \newcommand{\T}[3]{\Tfun(#3 \mid #1,#2)} % order s,a,s'
    \newcommand{\po}[2]{\ensuremath{\p(#2 \mid #1)}} % order: s, a
    \newcommand{\pp}[2]{\ensuremath{\p(#2 \mid #1, \pparams)}}
}

\DeclareOption{beta}{
    \newcommand{\R}[4]{\Rfun_{#1,#3}^{#2}(#4)} %order: s,a,s',r
    \newcommand{\T}[3]{\Tfun_{#1}^{#2}(#3)}
    \newcommand{\po}[2]{\ensuremath{\p_{#1}(#2) }}
    \newcommand{\pp}[2]{\ensuremath{\p_{\pparams}^{#1}(#2) }}
}

\DeclareOption{kappa}{
    \newcommand{\R}[4]{\Rfun_{#1,#3}^{#2,#4}}
    \newcommand{\T}[3]{\Tfun_{#1,#3}^{#2}}
    \newcommand{\po}[2]{\ensuremath{\p_{#1}^{#2} }}
    \newcommand{\pp}[2]{\ensuremath{\p_{\pparams}^{#1,#2} }}
}

\ProcessOptions\relax
% done loading the options
